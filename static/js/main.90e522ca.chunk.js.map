{"version":3,"sources":["reducers/stockDataReducer/index.js","reducers/tradeReducer/index.js","reducers/tradeHistoryReducer/index.js","reducers/portfolioReducer/index.js","reducers/index.js","actions/types.js","store.js","App.js","config.js","actions/search.js","components/search/index.js","components/header/index.js","components/portfolio/index.js","actions/loadPortfolioData.js","components/portfolio/leftColumn/holdings.js","components/portfolio/rightColumn/tradeHistory.js","actions/loadTradeHistory.js","components/stock/leftColumn/companySummary.js","components/stock/index.js","components/stock/leftColumn/keyStats.js","util.js","components/stock/leftColumn/index.js","components/stock/rightColumn/priceData.js","components/stock/rightColumn/trade.js","actions/trade.js","components/stock/rightColumn/index.js","actions/loadStockData.js","components/stock/modal/tradeConfirmation.js","index.js"],"names":["initialState","key_stats","profile","chart","quote","symbol","side","price","quantity","ticker","showModal","error","loaded","tradeHistory","holdings","cash","stock_quotes","portfolio_loaded","stock_quotes_loaded","longChart","shortChart","longShortChart","rootReducer","combineReducers","stock","state","action","type","trade","portfolio","payload","middleware","thunk","store","createStore","compose","applyMiddleware","App","secret","stock_base_url","backend_url","search","history","dispatch","key_stats_endpoint","fetch","then","data","status","json","push","document","getElementById","innerText","catch","e","console","log","Search","this","props","className","placeholder","id","onKeyPress","key","target","value","toUpperCase","onClick","Component","withRouter","connect","Header","chart2","role","aria-label","to","loadPortfolioData","loadPortfolioStockPrices","stocks","Object","keys","join","createChart","quotes","longSectorChart","shortSectorChart","long","short","map","i","val","Math","abs","position","previous","close","toFixed","sector","Holdings","usd","thead","cost_basis","round","TradeHistory","_id","Date","createdAt","toLocaleString","Portfolio","loadTradeHistory","options","height","series","ApexCharts","querySelector","render","prevProps","updateOptions","labels","concat","updateSeries","values","tradeHistoryLoaded","React","user","CompanySummary","description","KeyStats","marketcap","peRatio","ttmEPS","dividendYield","beta","day200MovingAvg","week52high","week52low","week52change","LeftColumn","PriceData","URLSearchParams","window","location","get","style","width","Trade","submitTrade","selectSide","step","min","RightColumn","loadStockData","profile_endpoint","previous_close_endpoint","chart_endpoint","StockModal","active","closeModal","modalConfirmTrade","getState","tradeState","method","body","JSON","stringify","username","headers","Stock","barChart","title","text","align","xaxis","yaxis","tooltip","enabled","bar","x","date","y","open","high","low","ReactDOM","path","exact","component"],"mappings":"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","file":"static/js/main.90e522ca.chunk.js","sourcesContent":["import {\r\n  LOAD_KEY_STATS,\r\n  LOAD_STOCK_PROFILE,\r\n  LOAD_STOCK_QUOTE,\r\n  LOAD_STOCK_CHART,\r\n  START_LOAD_STOCK_DATA,\r\n  SEARCH_SUCCESS\r\n} from \"../../actions/types\";\r\n\r\nconst initialState = {\r\n  key_stats: {},\r\n  profile: {},\r\n  chart: [],\r\n  quote: 0,\r\n  symbol: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_STOCK_DATA:\r\n      return {\r\n        ...state,\r\n        key_stats: {},\r\n        profile: {},\r\n        chart: [],\r\n        quote: 0,\r\n        symbol: action.symbol\r\n      };\r\n\r\n    case SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        key_stats: {},\r\n        profile: {},\r\n        chart: [],\r\n        quote: 0,\r\n        symbol: action.symbol\r\n      };\r\n\r\n    case LOAD_KEY_STATS:\r\n      return {\r\n        ...state,\r\n        key_stats: action.key_stats\r\n      };\r\n\r\n    case LOAD_STOCK_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n\r\n    case LOAD_STOCK_QUOTE:\r\n      return {\r\n        ...state,\r\n        quote: action.quote\r\n      };\r\n\r\n    case LOAD_STOCK_CHART:\r\n      return {\r\n        ...state,\r\n        chart: action.chart\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SUBMIT_TRADE,\r\n  SUBMIT_INVALID_TRADE,\r\n  MODAL_CONFIRM_TRADE,\r\n  CLOSE_MODAL,\r\n  SELECT_SIDE\r\n} from \"../../actions/types\";\r\n\r\nconst initialState = {\r\n  side: \"buy\",\r\n  price: 0,\r\n  quantity: 0,\r\n  ticker: \"\",\r\n  showModal: false,\r\n  error: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_SIDE:\r\n      return {\r\n        ...state,\r\n        side: action.side,\r\n        error: false\r\n      };\r\n    case SUBMIT_TRADE:\r\n      return {\r\n        ...state,\r\n        price: action.price,\r\n        quantity: action.quantity,\r\n        ticker: action.ticker,\r\n        showModal: true,\r\n        error: false\r\n      };\r\n\r\n    case SUBMIT_INVALID_TRADE:\r\n      return {\r\n        ...state,\r\n        price: action.price,\r\n        quantity: action.quantity,\r\n        ticker: action.ticker,\r\n        showModal: false,\r\n        error: true\r\n      };\r\n\r\n    case CLOSE_MODAL:\r\n    case MODAL_CONFIRM_TRADE:\r\n      return {\r\n        ...state,\r\n        showModal: false,\r\n        error: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  START_LOAD_TRADE_HISTORY,\r\n  LOADED_TRADE_HISTORY\r\n} from \"../../actions/types\";\r\n\r\nconst initialState = {\r\n  loaded: false,\r\n  tradeHistory: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_TRADE_HISTORY:\r\n      return {\r\n        ...state,\r\n        loaded: false\r\n      };\r\n    case LOADED_TRADE_HISTORY:\r\n      return {\r\n        ...state,\r\n        loaded: true,\r\n        tradeHistory: action.tradeHistory\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  START_LOAD_PORTFOLIO_DATA,\r\n  LOADED_PORTFOLIO_DATA,\r\n  LOADED_PORTFOLIO_STOCK_PRICE,\r\n  CHARTS_CREATED\r\n} from \"../../actions/types\";\r\n\r\nconst initialState = {\r\n  holdings: {},\r\n  cash: {},\r\n  stock_quotes: {},\r\n  loaded: false,\r\n  portfolio_loaded: false,\r\n  stock_quotes_loaded: false,\r\n  longChart: {},\r\n  shortChart: {},\r\n  longShortChart: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_PORTFOLIO_DATA:\r\n      return {\r\n        ...state,\r\n        initialState\r\n      };\r\n    case LOADED_PORTFOLIO_DATA:\r\n      return {\r\n        ...state,\r\n        portfolio_loaded: true,\r\n        loaded: true && state.stock_quotes_loaded,\r\n        holdings: action.payload.stock,\r\n        cash: action.payload.cash\r\n      };\r\n\r\n    case LOADED_PORTFOLIO_STOCK_PRICE:\r\n      return {\r\n        ...state,\r\n        stock_quotes_loaded: true,\r\n        loaded: true && state.portfolio_loaded,\r\n        stock_quotes: action.payload\r\n      };\r\n\r\n    case CHARTS_CREATED:\r\n      return {\r\n        ...state,\r\n        longChart: action.longChart,\r\n        shortChart: action.shortChart,\r\n        longShortChart: action.longShortChart\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport stockDataReducer from \"./stockDataReducer\";\r\nimport tradeReducer from \"./tradeReducer\";\r\nimport tradeHistoryReducer from \"./tradeHistoryReducer\";\r\nimport portfolioReducer from \"./portfolioReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  stock: stockDataReducer,\r\n  trade: tradeReducer,\r\n  portfolio: portfolioReducer,\r\n  tradeHistory: tradeHistoryReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","// /login\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n// /portfolio\r\nexport const LOADED_PORTFOLIO_DATA = \"LOADED_PORTFOLIO_DATA\";\r\nexport const START_LOAD_PORTFOLIO_DATA = \"START_LOAD_PORTFOLIO_DATA\";\r\nexport const START_LOAD_PORTFOLIO_STOCK_PRICE = \"START_LOAD_PORTFOLIO_STOCK_PRICE\";\r\nexport const LOADED_PORTFOLIO_STOCK_PRICE = \"LOADED_PORTFOLIO_STOCK_PRICE\";\r\n\r\n// /portfolio, trade history\r\nexport const LOADED_TRADE_HISTORY = \"LOADED_TRADE_HISTORY\";\r\nexport const START_LOAD_TRADE_HISTORY = \"START_LOAD_TRADE_HISTORY\";\r\n\r\n// /portfolio, charts\r\nexport const CHARTS_CREATED = \"CHARTS_CREATED\";\r\n\r\n// /stock \r\nexport const LOAD_STOCK_DATA = \"LOAD_STOCK_DATA\";\r\nexport const LOAD_STOCK_CHART = \"LOAD_STOCK_CHART\";\r\nexport const LOAD_STOCK_QUOTE = \"LOAD_STOCK_QUOTE\";\r\nexport const LOAD_KEY_STATS = \"LOAD_KEY_STATS\";\r\nexport const LOAD_STOCK_PROFILE = \"LOAD_STOCK_PROFILE\";\r\nexport const START_LOAD_STOCK_DATA = \"START_LOAD_STOCK_DATA\";\r\n\r\n\r\n\r\n// /stock, submit trade\r\n\r\nexport const SELECT_SIDE = \"SELECT_SIDE\";\r\nexport const SUBMIT_TRADE = \"SUBMIT_TRADE\";\r\nexport const SUBMIT_INVALID_TRADE = \"SUBMIT_INVALID_TRADE\";\r\nexport const CLOSE_POSITION = \"CLOSE_POSITION\";\r\n\r\nexport const MODAL_CONFIRM_TRADE = \"MODAL_CONFIRM_TRADE\";\r\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\r\n\r\n\r\n\r\n//Search\r\n\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\r\nexport const SYMBOL_NOT_FOUND = \"SYMBOL_NOT_FOUND\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n    </div>\n  );\n}\n\nexport default App;\n","export const secret = \"sk_4bf3e9ec445e4ff78d3aebdf218190a4\"\r\nexport const public_key = \"pk_c55a8a6547ad418ea0df305f0f6ea0a3\"\r\nexport const stock_base_url = \"https://cloud.iexapis.com/v1\"\r\nexport const sandbox_base_url = \"https://sandbox.iexapis.com/v1\"\r\nexport const sandbox_secret = \"Tsk_029aabd3163c4d8ab0aefd70266f98b2\"\r\nexport const backend_url = \"http://18.136.211.239:5000\"\r\n\r\nexport const user = \"qwerty\"","import { SEARCH_SUCCESS, SYMBOL_NOT_FOUND } from \"./types\";\r\nimport { stock_base_url, secret, sandbox_base_url } from \"../config\";\r\n\r\n/*\r\nCall a lightweight endpoint to check if symbol exist. If exist, go to /stock page and show details on ticker.\r\nIf does not exist, show notify user symbol does not exist.\r\n*/\r\nconst search = (symbol, history) => dispatch => {\r\n  const key_stats_endpoint = `stock/${symbol}/stats`;\r\n  fetch(`${stock_base_url}/${key_stats_endpoint}?token=${secret}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: SEARCH_SUCCESS,\r\n            symbol: symbol\r\n          });\r\n          history.push(`/stock?ticker=${symbol}`)\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: SYMBOL_NOT_FOUND\r\n        });\r\n        document.getElementById('search-info').innerText = \"Ticker not found\"\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n};\r\n\r\nexport default search;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport search from \"../../actions/search\";\r\n\r\n/*\r\nThe search bar at the header.\r\n\r\n- Upon hitting enter or search button, it checks with backend if symbol exists.\r\n1) If exists, direct to /stock page, and load info for that stock.\r\n2) If does not exist, show an error msg to user to the left of search bar.\r\n\r\nWhen user begins input and if error msg is already displayed, error msg is removed.\r\n*/\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    let { search } = this.props;\r\n    return (\r\n      <nav className=\"level\">\r\n        <div className=\"level-item\">\r\n          <div className=\"field has-addons\">\r\n            <p className=\"control\">\r\n              <input\r\n                className=\"input is-fullwidth\"\r\n                type=\"text\"\r\n                placeholder=\"Input stock symbol\"\r\n                id=\"inputStockText\"\r\n                onKeyPress={e => {\r\n                  if (e.key === \"Enter\") {\r\n                    search(e.target.value.toUpperCase(), this.props.history);\r\n                  } else{\r\n                    document.getElementById('search-info').innerText = \"\"\r\n                  }\r\n                }}\r\n              />\r\n            </p>\r\n            <p className=\"control\">\r\n              <button\r\n                className=\"button\"\r\n                id=\"inputStockBtn\"\r\n                onClick={() => {\r\n                  search(\r\n                    document\r\n                      .getElementById(\"inputStockText\")\r\n                      .value.toUpperCase(),\r\n                    this.props.history\r\n                  );\r\n                }}\r\n              >\r\n                Search\r\n              </button>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(null, { search })(Search));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"../search\";\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <p className=\"navbar-item\">\r\n          <Link to=\"/\">Stock Trading App</Link>\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"navbar-end\">\r\n        <div className=\"navbar-item\">\r\n          <span className=\"has-text-danger is-size-7\" id=\"search-info\" />\r\n        </div>\r\n        <div className=\"navbar-item\">\r\n          <Search />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Header from \"../header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  loadPortfolioData,\r\n  loadPortfolioStockPrices,\r\n  createChart\r\n} from \"../../actions/loadPortfolioData\";\r\nimport { loadTradeHistory } from \"../../actions/loadTradeHistory\";\r\nimport Holdings from \"./leftColumn/holdings.js\";\r\nimport TradeHistory from \"./rightColumn/tradeHistory.js\";\r\n\r\nimport { user } from \"../../config\";\r\nimport ApexCharts from \"apexcharts\";\r\nvar chart;\r\nvar chart2;\r\n\r\nclass Portfolio extends React.Component {\r\n  componentDidMount() {\r\n    let { loadPortfolioData, loadTradeHistory } = this.props;\r\n    loadPortfolioData();\r\n    loadTradeHistory(user);\r\n\r\n    var options = {\r\n      chart: {\r\n        height: 280,\r\n        type: \"donut\"\r\n      },\r\n      series: []\r\n    };\r\n\r\n    chart = new ApexCharts(document.querySelector(\"#portfoliochart\"), options);\r\n\r\n    chart.render();\r\n\r\n    chart2 = new ApexCharts(\r\n      document.querySelector(\"#portfoliochart2\"),\r\n      options\r\n    );\r\n\r\n    chart2.render();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { longChart, shortChart, longShortChart, cash } = this.props;\r\n    if (prevProps.longChart !== longChart) {\r\n      chart.updateOptions({\r\n        labels: Object.keys(longChart).concat(\"Cash\")\r\n      });\r\n      chart.updateSeries(Object.values(longChart).concat(cash));\r\n      chart2.updateOptions({\r\n        labels: Object.keys(shortChart)\r\n      });\r\n      chart2.updateSeries(Object.values(shortChart));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      holdings,\r\n      stock_quotes,\r\n      cash,\r\n      loaded,\r\n      tradeHistory,\r\n      tradeHistoryLoaded,\r\n      longShortChart\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <br />\r\n        <div className=\"App\">\r\n          <div className=\"columns is-multiline is-centered\">\r\n            <div className=\"column is-half-desktop is-12-tablet\">\r\n              <div>\r\n                <p>{loaded ? `Long holdings: $${longShortChart.long}` : \"\"}</p>\r\n                <div id=\"portfoliochart\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"column is-half-desktop is-12-tablet\">\r\n              <p>{loaded ? `Short holdings: $${longShortChart.short}` : \"\"}</p>\r\n              <div id=\"portfoliochart2\" />\r\n            </div>\r\n            <div className=\"column is-half-desktop is-12-tablet\">\r\n              <Holdings\r\n                holdings={holdings}\r\n                stock_quotes={stock_quotes}\r\n                cash={cash}\r\n                loaded={loaded}\r\n              />\r\n            </div>\r\n            <div className=\"column is-half-desktop is-12-tablet\">\r\n              <TradeHistory\r\n                tradeHistory={tradeHistory}\r\n                loaded={tradeHistoryLoaded}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loaded: state.portfolio.loaded,\r\n  holdings: state.portfolio.holdings,\r\n  stock_quotes: state.portfolio.stock_quotes,\r\n  cash: state.portfolio.cash,\r\n\r\n  longChart: state.portfolio.longChart,\r\n  shortChart: state.portfolio.shortChart,\r\n  longShortChart: state.portfolio.longShortChart,\r\n\r\n  tradeHistory: state.tradeHistory.tradeHistory,\r\n  tradeHistoryLoaded: state.tradeHistory.loaded\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  loadPortfolioData,\r\n  loadTradeHistory\r\n})(Portfolio);\r\n","import {\r\n  START_LOAD_PORTFOLIO_DATA,\r\n  LOADED_PORTFOLIO_DATA,\r\n  START_LOAD_PORTFOLIO_STOCK_PRICE,\r\n  LOADED_PORTFOLIO_STOCK_PRICE,\r\n  CHARTS_CREATED\r\n} from \"./types\";\r\n\r\nimport { backend_url, stock_base_url, secret, user } from \"../config\";\r\n/*\r\n\r\n\r\n*/\r\nexport const loadPortfolioData = () => dispatch => {\r\n  dispatch({\r\n    type: START_LOAD_PORTFOLIO_DATA\r\n  });\r\n  fetch(`${backend_url}/portfolio?user=${user}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOADED_PORTFOLIO_DATA,\r\n            payload: data\r\n          });\r\n\r\n          dispatch(loadPortfolioStockPrices(data.stock));\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n};\r\n/*\r\n\r\nfetch('https://cloud.iexapis.com/v1/stock/market/batch?symbols=aapl,tsla&types=quote&token=sk_4bf3e9ec445e4ff78d3aebdf218190a4').then(data => data.json().then(d => console.log(d)))*/\r\n\r\nexport const loadPortfolioStockPrices = stocks => dispatch => {\r\n  dispatch({\r\n    type: START_LOAD_PORTFOLIO_STOCK_PRICE\r\n  });\r\n  fetch(\r\n    `${stock_base_url}/stock/market/batch?symbols=${Object.keys(stocks).join(\r\n      \",\"\r\n    )}&types=previous&token=${secret}`\r\n  )\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOADED_PORTFOLIO_STOCK_PRICE,\r\n            payload: data\r\n          });\r\n          //console.log(data);\r\n          dispatch(createChart(stocks, data))\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n};\r\n\r\nexport const createChart = (holdings, quotes) => dispatch => {\r\n  let longSectorChart = {}\r\n  let shortSectorChart = {}\r\n  let longShortChart = { long: 0, short: 0 }\r\n  Object.keys(holdings).map((stock, i) => { \r\n    let val = Math.abs((holdings[stock].position * quotes[stock].previous.close).toFixed(2))\r\n\r\n    if (holdings[stock].position > 0){\r\n      holdings[stock.sector] in longSectorChart ? \r\n      longSectorChart[holdings[stock].sector] += val :\r\n      longSectorChart[holdings[stock].sector] = val\r\n\r\n      longShortChart.long += val\r\n    } else {\r\n      holdings[stock.sector] in shortSectorChart ? \r\n      shortSectorChart[holdings[stock].sector] += val :\r\n      shortSectorChart[holdings[stock].sector] = val\r\n\r\n      longShortChart.short += val\r\n    }\r\n  })\r\n  dispatch({\r\n    type: CHARTS_CREATED,\r\n    longChart: longSectorChart,\r\n    shortChart: shortSectorChart,\r\n    longShortChart: longShortChart\r\n  })\r\n\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Holdings = props => {\r\n  const usd = <span className=\"is-size-7\">&nbsp;USD</span>;\r\n  const thead = (\r\n    <thead className=\"bold\">\r\n      <tr>\r\n        <td>Symbol</td>\r\n        <td>Quantity</td>\r\n        <td>Cost Basis</td>\r\n        <td>Current Price</td>\r\n        <td>Market Value</td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n  if (props.loaded === false) {\r\n    return (\r\n      <div className=\"whitebg\">\r\n        <p className=\"is-size-4\">Portfolio Holdings</p>\r\n        <table className=\"table is-fullwidth\">{thead}</table>\r\n        <i className=\"fas fa-spinner fa-spin\" />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"whitebg\">\r\n      <p className=\"is-size-4\">Portfolio Holdings</p>\r\n      <table className=\"table is-fullwidth\">\r\n        {thead}\r\n        <tbody>\r\n          {Object.keys(props.holdings).map(stock => {\r\n            return (\r\n              <tr key={stock}>\r\n                <td className=\"bold\">\r\n                  <Link to={`/stock?ticker=${stock}`}>{stock}</Link>\r\n                </td>\r\n                <td>{props.holdings[stock].position}</td>\r\n                <td>{props.holdings[stock].cost_basis} {usd}</td>\r\n                <td>\r\n                  {props.stock_quotes[stock].previous.close}\r\n                  {usd}\r\n                </td>\r\n                <td>\r\n                  {Math.round(\r\n                    props.stock_quotes[stock].previous.close *\r\n                      props.holdings[stock].position *\r\n                      100\r\n                  ) / 100}\r\n                  {usd}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr>\r\n            <td />\r\n            <td />\r\n            <td />\r\n            <td className=\"bold\">Cash</td>\r\n            <td>\r\n              {props.cash} {usd}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Holdings;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TradeHistory = props => {\r\n  const usd = <span className=\"is-size-7\">&nbsp;USD</span>;\r\n  const thead = (\r\n    <thead className=\"bold\">\r\n      <tr>\r\n        <td>Symbol</td>\r\n        <td>Quantity</td>\r\n        <td>Price</td>\r\n        <td>Market Value</td>\r\n        <td>Timestamp</td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n  if (props.loaded === false) {\r\n    return (\r\n      <div className=\"whitebg\">\r\n        <p className=\"is-size-4\">Trade History</p>\r\n        <table className=\"table is-fullwidth\">{thead}</table>\r\n        <i className=\"fas fa-spinner fa-spin\" />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"whitebg\">\r\n      <p className=\"is-size-4\">Last 10 Trades</p>\r\n      <table className=\"table is-fullwidth\">\r\n        {thead}\r\n        <tbody>\r\n          {props.tradeHistory.map(trade => {\r\n            return (\r\n              <tr key={trade._id}>\r\n                <td className=\"bold\">\r\n                  <Link to={`/stock?ticker=${trade.symbol}`}>\r\n                    {trade.symbol}\r\n                  </Link>\r\n                </td>\r\n                <td>{trade.quantity}</td>\r\n                <td>\r\n                  {trade.price}\r\n                  {usd}\r\n                </td>\r\n                <td>\r\n                  {Math.round(trade.price * trade.quantity * 100) / 100}\r\n                  {usd}\r\n                </td>\r\n                <td>{new Date(trade.createdAt).toLocaleString()}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n          <tr />\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeHistory;\r\n","import { START_LOAD_TRADE_HISTORY, LOADED_TRADE_HISTORY } from \"./types\";\r\nimport { backend_url } from \"../config\";\r\n\r\nexport const loadTradeHistory = user => dispatch => {\r\n  dispatch({\r\n    type: START_LOAD_TRADE_HISTORY\r\n  });\r\n  console.log(\"user\", user)\r\n  fetch(`${backend_url}/trade?username=${user}&page=${0}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOADED_TRADE_HISTORY,\r\n            tradeHistory: data.data\r\n          });\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CompanySummary extends React.Component {\r\n  render() {\r\n    let { key_stats, profile } = this.props;\r\n\r\n    return (\r\n      <div className=\"whitebg padded has-text-left outline\">\r\n        <p className=\"bold is-size-5\">Company Summary</p>\r\n        <br />\r\n        <p className=\"is-size-6\">{profile.description}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  key_stats: state.stock.key_stats,\r\n  profile: state.stock.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(CompanySummary);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Header from \"../header\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport LeftColumn from \"./leftColumn\";\r\nimport RightColumn from \"./rightColumn\";\r\n\r\nimport ApexCharts from \"apexcharts\";\r\nimport { loadPortfolioData } from \"../../actions/loadPortfolioData\";\r\nimport loadStockData from \"../../actions/loadStockData\";\r\nimport StockModal from \"./modal/tradeConfirmation.js\";\r\nvar chart;\r\n\r\nclass Stock extends React.Component {\r\n  componentDidMount() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const ticker = urlParams.get(\"ticker\");\r\n    let {\r\n      loadStockData,\r\n      loadPortfolioData,\r\n      portfolio_loaded,\r\n      barChart\r\n    } = this.props;\r\n\r\n    var options = {\r\n      chart: {\r\n        height: 350,\r\n        type: \"candlestick\"\r\n      },\r\n      series: [],\r\n      title: {\r\n        text: `${ticker} 1 month chart`,\r\n        align: \"left\"\r\n      },\r\n      xaxis: {\r\n        type: \"datetime\"\r\n      },\r\n      yaxis: {\r\n        tooltip: {\r\n          enabled: true\r\n        }\r\n      }\r\n    };\r\n\r\n    chart = new ApexCharts(document.querySelector(\"#stockchart\"), options);\r\n\r\n    chart.render();\r\n\r\n    //Handle case where user refreshed page, or directly accessed /stock page\r\n    if (!portfolio_loaded) {\r\n      loadPortfolioData();\r\n    }\r\n\r\n    loadStockData(ticker);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { barChart, symbol, loadStockData } = this.props;\r\n\r\n    /*\r\n      Once chart data is loaded, update the chart\r\n    */\r\n    if (JSON.stringify(barChart) !== JSON.stringify(prevProps.barChart)) {\r\n      chart.updateSeries([\r\n        {\r\n          data: barChart.map(bar => {\r\n            return {\r\n              x: bar.date,\r\n              y: [bar.open, bar.high, bar.low, bar.close]\r\n            };\r\n          })\r\n        }\r\n      ]);\r\n    }\r\n\r\n    /*\r\n      Handle user searching while on /stock page\r\n      Reloads stock charts/fundamentals and renames the chart title.\r\n    */\r\n\r\n    if (prevProps.symbol !== symbol) {\r\n      loadStockData(symbol);\r\n      chart.updateOptions({\r\n        title: {\r\n          text: `${symbol} 1 month chart`\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { key_stats, profile, portfolio_loaded } = this.props;\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <br />\r\n        <StockModal />\r\n        <div className=\"App\">\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-two-third\">\r\n              <LeftColumn />\r\n            </div>\r\n            <div className=\"column is-one-third\">\r\n              <RightColumn />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  key_stats: state.stock.key_stats,\r\n  profile: state.stock.profile,\r\n  barChart: state.stock.chart,\r\n  symbol: state.stock.symbol,\r\n\r\n  portfolio_loaded: state.portfolio.loaded,\r\n  holdings: state.portfolio.holdings\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadStockData, loadPortfolioData })(\r\n  Stock\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { convertMarketcap } from \"../../../util\";\r\nclass KeyStats extends React.Component {\r\n  render() {\r\n    let { key_stats, profile } = this.props;\r\n\r\n    return (\r\n      <div className=\"whitebg padded has-text-left outline\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-half\">\r\n            <table className=\"table is-fullwidth\">\r\n              <thead className=\"bold\">\r\n                <tr>\r\n                  <td>Key Stats</td>\r\n                  <td />\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <tr>\r\n                  <td>Market Cap</td>\r\n                  <td>{convertMarketcap(key_stats.marketcap)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>P/E</td>\r\n                  <td>{Math.round(key_stats.peRatio * 100) / 100}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>EPS</td>\r\n                  <td>{Math.round(key_stats.ttmEPS * 100) / 100}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Dividend Yield</td>\r\n                  <td>\r\n                    {Math.round(key_stats.dividendYield * 100 * 100) / 100}%\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Beta</td>\r\n                  <td>{Math.round(key_stats.beta * 100) / 100}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div className=\"column is-half\">\r\n            <table className=\"table is-fullwidth\">\r\n              <thead className=\"bold\">\r\n                <tr>\r\n                  <td>Technicals</td>\r\n                  <td />\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <tr>\r\n                  <td>200 day SMA</td>\r\n                  <td>{key_stats.day200MovingAvg}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>52 Week High</td>\r\n                  <td>{key_stats.week52high}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>52 Week Low</td>\r\n                  <td>{key_stats.week52low}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>52 Week Price Change</td>\r\n                  <td>{Math.round(key_stats.week52change*100 *100)/100}%</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  key_stats: state.stock.key_stats,\r\n  profile: state.stock.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(KeyStats);\r\n","export function convertMarketcap(value) {\r\n  if (value > 10 ** 12) {\r\n    return `${Math.round(value / 10 ** 12 * 1000)/1000} T`;\r\n  } else if (value > 10 ** 9) {\r\n    return `${Math.round(value / 10 ** 9 * 1000)/1000} B`;\r\n  } else if (value > 10 ** 6) {\r\n    return `${Math.round(value / 10 ** 6 * 1000)/1000} M`;\r\n  } else if (value > 10 ** 3) {\r\n    return `${Math.round(value / 10 ** 3 * 1000)/1000} K`;\r\n  }\r\n  return value;\r\n}\r\n","import React from \"react\";\r\nimport CompanySummary from \"./companySummary\";\r\nimport KeyStats from \"./keyStats\";\r\n\r\nconst LeftColumn = props => {\r\n  return (\r\n    <div>\r\n      <div id=\"stockchart\" className=\"whitebg outline\" />\r\n      <br />\r\n      <KeyStats />\r\n      <br />\r\n      <CompanySummary />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftColumn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PriceData extends React.Component {\r\n  render() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const ticker = urlParams.get(\"ticker\");\r\n\r\n    let { key_stats, quote, holdings } = this.props;\r\n    return (\r\n      <div className=\"whitebg outline\">\r\n        <table className=\"table is-fullwidth is-borderless\">\r\n          <thead className=\"bold\">\r\n            <tr>\r\n              <td style={{ width: \"25%\" }}>{ticker}</td>\r\n              <td style={{ width: \"25%\" }} />\r\n              <td style={{ width: \"25%\" }} />\r\n              <td style={{ width: \"25%\" }} className=\"has-text-right\">\r\n                {quote === 0 ? <i className=\"fas fa-spinner fa-spin\" /> : `$${quote}`}\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"is-size-7\">\r\n              <td>Position</td>\r\n              <td className=\"has-text-right \">\r\n                {holdings[ticker] ? holdings[ticker].position : \"-\"}\r\n              </td>\r\n              <td>Market Val</td>\r\n              <td className=\"has-text-right \">\r\n                {(holdings[ticker] && quote) ? `$${Math.round(holdings[ticker].position * quote * 100)/100}` : \"-\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  //current stock name\r\n  key_stats: state.stock.key_stats,\r\n  quote: state.stock.quote,\r\n  holdings: state.portfolio.holdings\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PriceData);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitTrade, selectSide } from \"../../../actions/trade\";\r\nclass Trade extends React.Component {\r\n  componentDidMount(){ \r\n    //document.getElementById(\"price_input\").value = 200\r\n    document.getElementById(\"qty_input\").value = 100\r\n\r\n  }\r\n  render() {\r\n    let { submitTrade, selectSide, quote, quantity, side, error } = this.props;\r\n    return (\r\n      <div className=\"whitebg padded outline\">\r\n        <p className=\"has-text-centered is-size-5 bold\">Trade</p>\r\n        <p className=\"has-text-left is-size-7 bold\">Select:</p>\r\n        <div className=\"columns is-centered\">\r\n          <div className=\"column is-half\">\r\n            <button\r\n              className={`button is-fullwidth is-success ${side === \"buy\"\r\n                ? \"\"\r\n                : \"is-outlined\"}`}\r\n              onClick={() => selectSide(\"buy\")}\r\n            >\r\n              Buy\r\n            </button>\r\n          </div>\r\n          <div className=\"column is-half\">\r\n            <button\r\n              className={`button is-fullwidth is-danger ${side === \"buy\"\r\n                ? \"is-outlined\"\r\n                : \"\"}`}\r\n              onClick={() => selectSide(\"sell\")}\r\n            >\r\n              Sell\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"columns is-centered\">\r\n          <div className=\"column is-half\">\r\n            <p className=\"has-text-left is-size-7 bold\">Price:</p>\r\n\r\n            <div className=\"field\">\r\n              <p className=\"control has-icons-left\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  min=\"0.01\"\r\n                  id=\"price_input\"\r\n                />\r\n                <span className=\"icon is-small is-left\">\r\n                  <i className=\"fas fa-dollar-sign\" />\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"column is-half\">\r\n            <p className=\"has-text-left is-size-7 bold\">Quantity:</p>\r\n\r\n            <div className=\"field\">\r\n              <p className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"1\"\r\n                  id=\"qty_input\"\r\n                />\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"button is-success is-fullwidth\"\r\n          onClick={() => {\r\n            submitTrade(\r\n              new URLSearchParams(window.location.search).get(\"ticker\"),\r\n              document.getElementById(\"price_input\").value,\r\n              document.getElementById(\"qty_input\").value\r\n            );\r\n          }}\r\n        >\r\n          Submit Order\r\n        </button>\r\n        <p className=\"is-size-7 has-text-danger\">{error ? 'Invalid quantity and/or price.' : ''}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  //current stock name\r\n  key_stats: state.stock.key_stats,  \r\n  quote: state.stock.quote,\r\n  quantity: state.trade.quantity,\r\n  side: state.trade.side,\r\n  error: state.trade.error\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, { submitTrade, selectSide })(Trade);\r\n","import {\r\n  SUBMIT_TRADE,\r\n  SUBMIT_INVALID_TRADE,\r\n  CLOSE_MODAL,\r\n  MODAL_CONFIRM_TRADE,\r\n  SELECT_SIDE\r\n} from \"./types\";\r\nimport { backend_url, user } from \"../config\";\r\nimport store from \"../store\";\r\n\r\nexport const submitTrade = (ticker, price, quantity) => dispatch => {\r\n  console.log(ticker, price, quantity);\r\n  if (price <= 0 || quantity <= 0) {\r\n    dispatch({\r\n      type: SUBMIT_INVALID_TRADE,\r\n      ticker: ticker,\r\n      price: price,\r\n      quantity: quantity\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: SUBMIT_TRADE,\r\n      ticker: ticker,\r\n      price: price,\r\n      quantity: quantity\r\n    });\r\n  }\r\n};\r\n\r\nexport const closeModal = () => dispatch => {\r\n  dispatch({\r\n    type: CLOSE_MODAL\r\n  });\r\n};\r\n\r\nexport const modalConfirmTrade = () => dispatch => {\r\n  //POST API TO BACKEND TO RECORD the trade\r\n  dispatch({\r\n    type: MODAL_CONFIRM_TRADE\r\n  });\r\n\r\n  console.log(store.getState().trade);\r\n  const tradeState = store.getState().trade;\r\n  fetch(`${backend_url}/trade/submitorder`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      username: user,\r\n      symbol: tradeState.ticker,\r\n      quantity: tradeState.quantity,\r\n      price: tradeState.price,\r\n      side: tradeState.side\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          console.log(\"ORDER SUCCESS\");\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n};\r\n\r\nexport const selectSide = side => dispatch => {\r\n  dispatch({\r\n    type: SELECT_SIDE,\r\n    side: side\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport PriceData from \"./priceData\"\r\nimport Trade from \"./trade\"\r\n\r\nconst RightColumn = props => {\r\n    return (\r\n      <div>\r\n       <PriceData/>\r\n       <br/>\r\n       <Trade/>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default RightColumn;","import {\r\n  START_LOAD_STOCK_DATA,\r\n  LOAD_STOCK_DATA,\r\n  LOAD_STOCK_CHART,\r\n  LOAD_KEY_STATS,\r\n  LOAD_STOCK_PROFILE,\r\n  LOAD_STOCK_QUOTE\r\n} from \"./types\";\r\n\r\nimport { stock_base_url, secret, sandbox_base_url } from \"../config\";\r\n/*\r\nLoad stock data upon user clicking search. Possible outcomes:\r\n\r\n1) Stock symbol is valid, data is returned\r\n2) Stock symbol is invalid. \r\n3) API unavailable.\r\n\r\n*/\r\n\r\nconst loadStockData = symbol => dispatch => {\r\n  dispatch({\r\n    type: START_LOAD_STOCK_DATA,\r\n    symbol: symbol\r\n  });\r\n\r\n  const key_stats_endpoint = `stock/${symbol}/stats`;\r\n  const profile_endpoint = `stock/${symbol}/company`;\r\n  const quote_endpoint = `stock/${symbol}/quote/close`; //Only for paid subscribers\r\n  const previous_close_endpoint = `stock/${symbol}/previous`;\r\n  const chart_endpoint = `stock/${symbol}/chart/1m`;\r\n\r\n  fetch(`${stock_base_url}/${key_stats_endpoint}?token=${secret}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOAD_KEY_STATS,\r\n            key_stats: data\r\n          });\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n\r\n  fetch(`${stock_base_url}/${profile_endpoint}?token=${secret}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOAD_STOCK_PROFILE,\r\n            profile: data\r\n          });\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n\r\n  fetch(`${stock_base_url}/${previous_close_endpoint}?token=${secret}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOAD_STOCK_QUOTE,\r\n            quote: data.close\r\n          });\r\n\r\n          document.getElementById(\"price_input\").value = data.close;\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n\r\n  fetch(`${stock_base_url}/${chart_endpoint}?token=${secret}`)\r\n    .then(data => {\r\n      if (data.status === 200) {\r\n        data.json().then(data => {\r\n          dispatch({\r\n            type: LOAD_STOCK_CHART,\r\n            chart: data\r\n          });\r\n        });\r\n      } else {\r\n        console.log(\"ERROR\");\r\n      }\r\n    })\r\n    .catch(e => console.log(e));\r\n};\r\n\r\nexport default loadStockData;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { closeModal, modalConfirmTrade } from \"../../../actions/trade\";\r\nclass StockModal extends React.Component {\r\n  render() {\r\n    let {\r\n      active,\r\n      error,\r\n      side,\r\n      price,\r\n      quantity,\r\n      symbol,\r\n      closeModal,\r\n      modalConfirmTrade\r\n    } = this.props;\r\n    return (\r\n      <div className={`modal ${active === true ? \"is-active\" : \"\"}`}>\r\n        <div className=\"modal-background\" onClick={() => closeModal()} />\r\n        <div className=\"modal-content box\">\r\n          <div className=\"has-text-centered\">\r\n            <p className=\"bold is-size-4\">Trade Confirmation Window</p>\r\n            <br />\r\n            <p>\r\n              You will{\" \"}\r\n              <b>\r\n                {side} {quantity} share{quantity > 1 ? \"s\" : \"\"}\r\n              </b>{\" \"}\r\n              of <b>{symbol}</b> at <b>${price}/share</b> for a total of{\" \"}\r\n              <b>${quantity * price}</b>.\r\n            </p>\r\n            <br />\r\n            <div className=\"buttons is-centered\">\r\n              <button\r\n                className=\"button is-success\"\r\n                onClick={() => modalConfirmTrade()}\r\n              >\r\n                Confirm\r\n              </button>\r\n              <button className=\"button is-danger\" onClick={() => closeModal()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"modal-close is-large\" onClick={() => closeModal()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  //current stock name\r\n  active: state.trade.showModal,\r\n  side: state.trade.side,\r\n  price: state.trade.price,\r\n  quantity: state.trade.quantity,\r\n  symbol: state.trade.ticker,\r\n  error: state.trade.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { closeModal, modalConfirmTrade })(\r\n  StockModal\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport 'bulma'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport App from \"./App\";\nimport Portfolio from \"./components/portfolio\";\nimport Stock from \"./components/stock\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n      <Route path=\"/\" exact component={Portfolio} />\n      <Route path=\"/stock\" exact component={Stock} />\n      \n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}